#include <OneWire.h> //sirve para recibir y enviar datos desde el mismo cable
#include <DallasTemperature.h> //libreria sensor temperatura
#include <LiquidCrystal.h>    // importa libreria LiquidCrystal


#define TURBIDEZ  A1
#define SensorPin A0      // a saída analógica do medidor de pH é conectada à saída analógica do Arduinoin
int phValue;
int Eletrovalvula1 = 10;
int Eletrovalvula2 = 9;
int Eletrovalvula3 = 8;
int Eletrovalvula4 = 6;

//lcd
LiquidCrystal lcd(52, 50,51 , 48, 46, 44);  // crea objeto y asigna pines a los cuales se encuentran conectados RS, E, D4, D5, D6, D7
                //RS, E, D4, D5, D6, D7

//sensor ph
unsigned long int avgValue;  //Armazene o valor médio do feedback do sensor
float b;
int buf[10],temp;//temperatura

//TURBIDEZ

float voltage,turbidity;

//temperatura
OneWire Piscina1(7); // determinas cual es el pin que envia y recibe datos y su nombre
DallasTemperature sensorTemperatura(&Piscina1); // determina que el sensor esta en piscina 1

void setup() // Se ejecuta 1 vez al encender o reiniciar la placa
{  
  Serial.begin(9600);
  lcd.begin(16, 2);
  // TURBIDEZ
  sensorTemperatura.begin(); //inicia el sensor de temperatura
  pinMode(TURBIDEZ,INPUT);
  pinMode(12, OUTPUT);
}
void loop() // ciclo que se ejecuta infinitas veces hasta que apagues la placa


{
  {
    Serial.println("");
    Serial.println("Resultado De Medicion");
  }
  //SENSOR PH
  {
  for(int i=0;i<10;i++)       //Obtenga 10 valores de muestra del sensor para suavizar el valor
  { 
    buf[i]=analogRead(SensorPin);
    delay(10);
  }
  for(int i=0;i<9;i++)        //ordenar el análogo de pequeño a grande
  {
    for(int j=i+1;j<10;j++)
    {
      if(buf[i]>buf[j])
      {
        temp=buf[i];
        buf[i]=buf[j];
        buf[j]=temp;
      }
    }
  }
 
  avgValue=0;
  for(int i=2;i<8;i++)                      //tomar el valor promedio de la muestra de 6 centros
    avgValue+=buf[i];
  float phValue=(float)avgValue*5.0/1024/6; //convertir el análogo en milivoltios
  phValue=3.5*phValue; //convertir el milivoltio en valor de pH
    
    
    
 //lcd
 
   lcd.setCursor(0, 1 );
   lcd.print("PH:"); 
   lcd.setCursor(3,1);
   lcd.print(phValue,2);
   
//monitor serial

   Serial.print("PH:");
   Serial.print(phValue,2);
   Serial.println(" ");

} 
//sensor temperatura

{
sensorTemperatura.requestTemperatures();   //Se envía el comando para leer la temperatura
float temp= sensorTemperatura.getTempCByIndex(0); //Se obtiene la temperatura en ºC con decimales


     //lcd
   lcd.setCursor(0, 0);   
    lcd.print("Temp:"); // nombre sensor que salga en monitor serial
    lcd.setCursor(6, 0);  
    lcd.print(temp);  //constante determianda en float
    lcd.print("C");  // unidad en la que se esta midiendo    
//monitor serial    
    Serial.print("Temp:");
   Serial.print(temp);  //constante determianda en float
  Serial.println(" C");  // unidad en la que se esta midiendo
}
//sensor turbidez

  {
  voltage=0.004888*analogRead(TURBIDEZ);  //in V
  turbidity=-1120.4*voltage*voltage+5742.3*voltage-4352.9;  //in NTU
  if((voltage>=2.5)&(turbidity>=0));
  
  //lcd
   lcd.setCursor(8, 1); 
  lcd.print("Tur:");
   lcd.setCursor(12, 1); 
  lcd.print(""+String(turbidity)+"NTU"); 
  //monitor serial
   Serial.print("Tur:");
  Serial.println(""+String(turbidity)+" NTU"); 
 
  
  }
} 
   
  //RETRASO 
    
 
